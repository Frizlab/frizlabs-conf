.Dd January 21, 2007
.Os Mac\ OS\ X
.Dt QTCoffee 1 ""
.Sh NAME
.Nm QTCoffee
.Nd command-line QuickTime tools
.
.Sh DESCRIPTION
This is an introduction, with detailed examples, to 3AM Coffee Software's package of command-line QuickTime tools. See the individual man pages of
.Xr catmovie 1 ,
.Xr muxmovie 1 ,
.Xr modmovie 1 ,
.Xr chapcutmovie 1
and
.Xr splitmovie 1
for detailed information.
Additional examples can be found in /usr/local/share/doc/QTCoffee/How To.rtf or online at
.Lk http://www.3am.pair.com/QTCoffee%201.2.5%20How%20To.rtf
.Pp
These tools operate on any file format that QuickTime can read, including QuickTime movies, AVIs, MPEGs, many image formats, and many sound formats. Plug-ins that extend QuickTime (e.g. to read WMV or OGG files) also extend QTCoffee. The tools produce QuickTime movies as output; in some cases where all the inputs are MPEG-4 movies (including the AAC sound files that iTunes generally uses) the output can be another MPEG-4 movie (or AAC file). Keep in mind that
.Dq movie
can also mean 
.Dq sound 
in the descriptions below.
.Pp
.Nm catmovie
is used to concatenate (join) several movies, producing an output movie that plays the movies one after the other. If you are trying to join audio files, you may also be interested in 3AM Coffee Software's 
.Dq iTunesJoin
shareware package, a series of scripts for iTunes that leverage the power of
.Nm QTCoffee
in an easy to use manner.
.Pp
.Nm muxmovie
is used to multiplex several movies, playing them at the same time. This can be used to put a video track together with one or more audio tracks, to place an image over a video track (as in a station identifier, or to mask garbled portions of the video), or to place one video track on top of another (as with a picture-in-picture effect).
.Pp
.Nm modmovie
is used to modify various aspects of a movie. It can extract/delete tracks, scale and move visual tracks, and extract/delete chapters. It can also be used to make a self-contained movie from a
.Dq pointer
movie that does not contain actual audio and video data.
.Nm catmovie
and
.Nm muxmovie
can also perform all of the modifications that
.Nm modmovie
can perform on any or all of their input files. The only major feature of
.Nm modmovie
that they don't have is the
.Fl save-in-place
option.
.Pp
.Nm chapcutmovie
cuts a movie into a bunch of smaller movies, one for each chapter. Typically, you would do this in order to edit individual chapters separately, and then concatenate them all back together.
.Pp
.Nm splitmovie
splits a movie in a bunch of smaller movies either of equal duration or at the times you specify on the command-line.
.Pp
.Nm QTCoffee
tools are nicely complemented by the qt_tools package from
.Lk http://www.omino.com/~poly/software/qt_tools
which allows, among other things, access to QuickTime's export functionality from the command line.
.
.Sh USAGE
.Nm toolname Ar file1 file2 ... fileN Fl o Ar outputFile
is the simplest usage for
.Nm catmovie
and
.Nm muxmovie .
It will concatenate or multiplex all the listed files into the output file. 
.Nm toolname Ar file Fl o Ar outputFile
is the simplest usage for
.Nm modmovie ,
.Nm chapcutmovie ,
and
.Nm splitmovie
which take only a single input file. In the case of
.Nm chapcutmovie
and
.Nm splitmovie
there will be multiple output files whose names are based on the name of the output file.
.Pp
The output file(s) will be a small
.Dq pointer
movie which does not contain the actual audio and video data from the original movies, but instead points to those movies. The
.Fl self-contained
option can be used to include all the necessary data in the output file. It is generally used at the last step. It also makes the file
.Dq fast-start
which means that when placed on a web page, the movie can begin to play as soon as it starts downloading; the user does not have wait for the entire file to download. It will also compress the header, which makes for an even faster start. Options are available to disable these features.
.Pp
If the output file contains only MPEG-4 video and/or MPEG-4 (AAC) audio, then the
.Nm QTCoffee
programs can output directly to an MPEG-4 file using the
.Fl mp4
option.
.Pp
The settings of the output movie (such as scaling, auto-play, annotations, time scale, and other movie specific properties)
are taken from the first input movie, unless the 
.Fl use-settings
option is used with
.Nm catmovie
or
.Nm muxmovie. 
Scaling can be modified by the 
.Fl msscale , 
.Fl mhscale ,
and
.Fl mvscale
options. If the file from which the settings are taken has iTunes tags (such as AAC and protected AAC files), 
the program
does its best to convert those tags into a format suitable for QuickTime movies. See the section
.Sx ITUNES TAGS
for more information.
.Pp
There are also options that control which tracks and chapters of the movies to process. If these
options appear before the names of any files, then they apply to all files and are called 
.Dq global options. 
If they appear right after the name
of a movie, they apply only to that movie and are called 
.Dq file specific options. 
You can have both types of options at the same time. (There is no
distinction for
.Nm modmovie
and options can appear anywhere on the command line.)
.Pp
.Nm catmovie ,
.Nm muxmovie ,
and
.Nm modmovie
can produce an XML file containing chapter information in a format suitable for use with Apple's ChapterTool.
.Lk http://homepage.mac.com/applepodcast/podcasts/Resources/static/podcast_chapter_tool_beta.dmg
Chapters inserted with ChapterTool are visible in iTunes 4.9 and later and on Clickwheel iPods.
.Nm catmovie
can generate chapters automatically. They can also be added manually using any of these three programs.
.
.Sh OPTIONS
.Nm chapcutmovie
and
.Nm splitmovie
support very few options, mostly related to the format of the output.
.Pp
.Nm modmovie ,
.Nm muxmovie ,
and
.Nm catmovie
have mostly the same options.
.Pp
Please see the man pages of the specific tools for detailed discussion of the options.
.
.Sh ITUNES TAGS
QuickTime files can contain tags, but these tags are somewhat limited. 
For that reason, iTunes uses a special format for the tags in AAC and protected AAC files. However neither QuickTime Player nor iTunes recognizes those tags when present in an ordinary QuickTime movie (which is what
.Nm
produces).
When QuickTime opens an MP3 file (which uses its own tag format), it converts, to best of its ability, the tags into QuickTime format, but it does not do the same for AAC files. 
By default, when 
.Nm QTCoffee
encounters such tags, it does its best to convert the tags into standard QuickTime tags. Both QuickTime Player and iTunes will recognize the QuickTime tags. But there are numerous bugs in both QuickTime Player and iTunes for tags with non-Roman characters (this applies both to MP3 tags as well as the special conversion applied by these tools). Moreover,
several iTunes fields, such as BPM, cover art, and disk number, cannot be represented by QuickTime tags and will not be carried over.
Because of these limitations,
.Nm
leaves the original tags in place (in case Apple someday decides to support them in QuickTime movies).
It is possible that the tag conversion will cause problems or that you don't want the old tags to remain in the file. 
.Nm
offers options to control the conversion of tags. 
.Pp
Tag conversion is not available with the
.Fl mp4
option because Apple has not made available to others the method by which iTunes includes tags in AAC files.
.Pp
QuickTime 7 has a new tag format and supports iTunes tags. A future version of
.Nm
will take advantage of this.
.Pp
If you are joining iTunes music, you may wish to download 3AM Coffee Software's shareware package of iTunes scripts
.Dq iTunesJoin
which integrates
.Nm
with iTunes via Applescript to handle tags intelligently, and without the fuss of the command-line.
.
.Sh EXAMPLES
.D1 modmovie in.mov -self-contained
Flattens all necessary data for the pointer movie
.Dq in.mov
into 
.Dq out.mov
on the Desktop. Often used as the last step in an editing session involving multiple
.Nm QTCoffee
commands.
.Pp
.D1 modmovie in.mov -mp4
Trys to output the file
.Dq in.mov
to the MPEG-4 movie
.Dq out.mp4
on the Desktop without re-encoding it. This will only work if all the files that went into making
.Dq in.mov
had only MPEG-4 video and/or AAC audio. It may not work even then.
.Pp
.D1 modmovie file.mov -notrack Do Sound Track Dc -save-in-place
Removes the sound track from a movie and saves it in place.
.Pp
.Dl modmovie -msscale 2 file.mov -save-in-place
Sets a movie to play double size.
.Pp
.Dl catmovie *.m4a -o allsongs.mov
Concatenates all the AAC files (which usually have a .m4a extension) into the single output file
.Dq allsongs.mov . 
The tags of the output movie will be converted from those in the first song.
Note that the output is a QuickTime movie file, not another AAC file, so iTunes will be able to play it
but an iPod will not. You can select the
.Dq Convert Selection to 
option in the 
.Dq Advanced
menu of iTunes to make an iPod compatible file, but with some quality loss (unless you choose the
.Dq Apple Lossless
format).
.Pp
.Dl catmovie *.m4a -mp4 -o allsongs.m4a
Concatenates all the AAC files into the single output file
.Dq allsongs.m4a . 
The output movie will not have any tags. Note that this procedure may fail, in which case you will need to use the previous example and possibly accept some quality loss in order to make an iPod playable file.
You can use the name
.Dq allsongs.m4b
to make the output file bookmarkable. (iTunes and the iPod will remember where you left-off playing and will restart playback from that point when
you play the song again.)
.Pp
.Dl catmovie *.m4a -auto-chapters-merge -chapter-tool-xml allsongs.xml -mp4 -o allsongs.m4a
.Dl ChapterTool -x allsongs.xml -a allsongs.m4a -o allsongs-chaptered.m4a
will concatenate the input AAC files, automatically generating a chapter list for use with ChapterTool. Chapters already present in input files will be preserved, while files without chapters will create a chapter with the same name as the iTunes gives the file. ChapterTool then adds the chapters to the m4a file. The resulting chapters are visible in iTunes 4.9 and later and on Clickwheel iPods and later.
.Pp
.Dl modmovie fastsong.m4a -rate 0.9 -o slowsong.mov
Slows down a song by 10%. As above, the output movie will play in iTunes but not on an iPod. Unfortunately, the
.Fl mp4
option will not help, since only QuickTime seems to pay attention to the rate information, so you will need to convert the 
.Dq .mov
file to get it play on an iPod.
.Pp
.Dl catmovie -list movie1.mov movie2.mov
.Dl catmovie -notrack Do Sound Track Dc movie1.mov movie2.mov
The first command is used to get a listing of the tracks in the two movies. It also concatenates them, sending output to
the file 
out.mov
on the Desktop, but we don't care about that. Assume we discover that the audio track is named 
.Do Sound Track Dc
in both movies. The second command then concatenates the movies without their audio tracks, and places
the result into out.mov on the Desktop.
.Pp
.D1 muxmovie file1 -notrack Do Sound Track Dc -list file2 -track Do Sound Track Dc
Multiplexes the sound track from
file2
with everything but the sound track from
file1
and lists the tracks of
file1
so we can make sure we got it right. The result goes to the file
out.mov
on the Desktop
.Pp
.Dl muxmovie -scale Movie.mov Watermark.png -htranslate 624 -vtranslate 464 -o output.mov
Places a 16x16 watermark in lower right corner of a 640x480 video. Transparency in the watermark will be ignored unless you use QuickTime Pro to set the Graphics Mode to Straight Alpha. (We may someday add the ability to set the Graphics Mode.)
.Pp
.Dl muxmovie Movie1.mov Movie2.mov -sscale 1/2 -o PictureInPicture.mov
This places a half size version of Movie2.mov at the upper left corner of Movie1.mov, sending the output to PictureInPicture.mov.
.Pp
.Dl muxmovie MovieUL.mov MovieUR.mov -htranslate 320 MovieLL.mov -vtranslate 240 MovieLR -htranslate 320 -vtranslate 240 -o FourMovies.mov
This places 4 320x240 movies so that they play in the four corners of a 640x480 frame. 
.Pp
.Dl catmovie pic*.jpg -o pictures.mov
.Dl catmovie song1.m4a song2.m4a -o sound.mov
.Dl muxmovie sound.mov pictures.mov -scale -o SlideShow.mov
Makes a simple slide show. The first command concatenates the photos into a movie; by default each photo takes 1/15 seconds, much too fast. The second command creates a sound track with song1.m4a followed by song2.m4a. The third command places the sound track with the photos, scaling the duration of the slide show to be the same as that of the sound track. The output movie is not self-contained, so do not delete the photos or the music files. (The intermediate files pictures.mov and sound.mov can be safely deleted.)
.Pp
.Dl muxmovie -scale Video.mpg Mask.gif -vtranslate 236 Audio.mp3 -o Output.mov
Assume we have a 320x240 pixel video movie in the MPEG file
Video.mpg
and that there are 4 flickering or distorted lines at the bottom of the image. We prepare a mask file that is a 320x4 pixel black rectangle and store it in 
Mask.gif. 
We also have audio in the MP3 file
Audio.mp3.
This command will mask the flickering lines of the MPEG file (the
.Fl scale
option makes the mask GIF the same duration as the video movie) and multiplex in the MP3 audio, scaling the audio to the current duration as well. Output goes into the file
Output.mov.
.Pp
The next few examples assume we have an NTSC DV movie, such as those produced by iMovie. The
.Dq reference
movie that iMovie 5 produces is scaled strangely (it scales the vertical dimension as well as the horizontal, which can lead to nasty artifacts), so first we will remove this scaling.
.Pp
.Dl modmovie "My Great Movie.iMovieProject/Shared Movies/iDVD/My Great Movie.mov" -resetmmatrix -o rawmovie.mov
.Pp
NTSC DV movies are 720x480 pixels, but the pixels are not square. You might think that scaling a 4x3 movie so that it is 640x480 square pixels would be correct, but it is slightly wrong and some people notice. It is actually a 704x480 subframe of the movie that needs to be scaled to a 4x3 aspect ratio. For analog sources, one usually chops off 8 pixels from either side of the image and then scales the 704x480 down to 640x480. QTCoffee tools cannot cut out parts of an image; in any case, modern DV cameras usually have content out to the edges of the frame and we are assuming you want to keep those extra pixels. So we need to scale the horizontal by 640/704=10/11. (Technically, the ratio is actually 4320/4739, but 10/11 is only off by 0.3%, so no one will notice; for a 720x576 PAL image, the true scaling factor is 128/117; 12/11 approximates it to within 0.3%.)
.Dl modmovie rawmovie.mov -hscale 10/11 -save-in-place
This scales an NTSC DV movie so it plays with a 4x3 aspect ratio. The resulting movie is approximately 655x480 (square) pixels. Similarly, a 16x9 movie needs to be scaled by (480 * 16/9) / 704 = 40/33.
.Dl modmovie rawmovie.mov -hscale 40/33 -save-in-place
This scales an NTSC DV movie so it plays with a 16x9 aspect ratio. The resulting movie is approximately 873x480.
.Pp
In the next example, we will concatenate a 4x3 movie with a 16x9 movie. Instead of letterboxing the widescreen movie, we will place black bars to the left and right sides of the 4x3 movie. We will need a 720x480 entirely black picture (make this in Photoshop or Graphic Converter or some other graphics editor). Call it BlackFrame.png.
.Pp
We want to add the the black background to the 4x3 movie. 
.Nm muxmovie
cannot apply the -scale option to the first argument, so we cannot use BlackFrame.png there. But if it is the second argument, it will cover up the video. So we do it in two steps. The first step uses -scale to give us a movie with a black frame that lasts the right amount of time. We don't care about spatial scaling at this point, since all we need is the black frame with the right duration.
.Dl muxmovie 4x3.mov BlackFrame.png -scale -o 4x3_covered.mov
The next step takes our black frame (which in this example will be "Video Track 2"), and extracts it from the movie we just created, multiplexing it with our DV movie. We scale the 4x3 movie by 3/4 horizontally, so that it is correctly sized relative to the 16x9 movie. We also translate by 90 pixels in order to center it.
.D1 muxmovie 4x3_covered.mov -track Do Video Track 2 Dc 4x3.mov -hscale 3/4 -htranslate 90 -o 4x3_framed.mov
If you play this movie, you should see a squished video playing centered in a black frame. Now we concatenate with our 16x9 footage and scale the whole thing to the correct aspect ratio. 
.Dl catmovie -hscale 40/33 4x3_framed.mov 16x9.dv -o output.mov
.
.Sh VERSION
1.2.5
.
.Sh SEE ALSO
.Xr catmovie 1 ,
.Xr muxmovie 1 ,
.Xr modmovie 1 ,
.Xr chapcutmovie 1 ,
.Xr splitmovie 1 .
.Pp
Additional examples can be found in /usr/local/share/doc/QTCoffee/How To.rtf or online at
.Lk http://www.3am.pair.com/QTCoffee%201.2.5%20How%20To.rtf
.
.Sh AUTHOR
3AM Coffee Software 
.Mt QTCoffee@3amcoffee.com ,
.Lk http://www.3am.pair.com/QTCoffee.html .
.
